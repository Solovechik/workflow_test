name: Testing actions
run-name: ${{ github.actor }} is testing out actions
on: 
  pull_request:
    # types: [ labeled ]

permissions:
  contents: write
    
jobs:
  Label_and_sem_versions:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Get previous tag
        id: previous_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next minor version
        id: sem_versions
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previous_tag.outputs.tag }}

      - name: Generate version
        id: generate_version
        env:
          LABELS: github.event.pull_request.labels.*.name
        run: |
          if ${{ contains(env.LABELS, 'patch') }}; then
            echo "version=${{ steps.sem_versions.outputs.v_patch }}" >> $GITHUB_OUTPUT
          elif ${{ contains(env.LABELS, 'minor') }}; then
            echo "version=${{ steps.sem_versions.outputs.v_minor }}" >> $GITHUB_OUTPUT
          elif ${{ contains(fromJSON(env.LABELS), 'major') }}; then
            echo "version=${{ steps.sem_versions.outputs.v_major }}" >> $GITHUB_OUTPUT
          else
            echo 'Wrong tag'
            exit 1
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.generate_version.outputs.version }}
          release_name: ${{ steps.generate_version.outputs.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      # - name: Get branch name
      #   run: echo "branch=${GITHUB_REF#refs/heads/}"

      # - name: Get branch name
      #   run: echo "${GITHUB_HEAD_REF##*/}"

      # - name: Get pr name
      #   env:
      #     PR_NUMBER: ${{ github.event.number }}
      #   run: echo "$PR_NUMBER"

  # Generate_exit_code:
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: Check out repository code
  #         uses: actions/checkout@v4
          
      # - name: Run python script
      #   id:   exit_code_generator
      #   continue-on-error: true
      #   run:  |
      #     python exit_code.py

      # - name: Catch exit code
      #   if:   always() && steps.exit_code_generator.outcome == 'failure'
      #   env:
      #     WEBHOOK_URL: https://chat.googleapis.com/v1/spaces/AAAAqt2tvNo/messages?key=AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI&token=xc_gcoYN9mOqSJBlG3CaWv50uZj8ZNtm5ZQ_Bhl992Q
      #   run: |
      #     curl -X POST -H 'Content-Type: application/json' -d \
      #     '{"text": "GitHub Actions Airbyte Freshness Test Failed\n \
      #     Run URL: '"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"'\n \
      #     See results in Redash: https://redash.tools.improvado.io/embed/query/9441/visualization/10947?api_key=8K0KW0F3lLhcfq2QyfGCVTQbBmpz01q22lWmdPdc&"}' \
      #     $WEBHOOK_URL
